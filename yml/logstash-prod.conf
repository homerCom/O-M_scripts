input {
    beats {
        port => "6666"
    }
}

filter {

    if "prod_ims" in [tags] {
        json {
            source => "message"
            remove_field => "message"
        # remove_field => "@timestamp"
        }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
        mutate {
            remove_field => ["host","event","input","request","offset","prospector","source","type","beat"]
            rename => {"http_user_agent" => "agent"}
            split => {"x_forwarded_for" => ", "}
            split => {"response_time" => ", "}
        }
        geoip {
            source => "real_ip"
            database => "/opt/services/elk/logstash-prod/geolite2-city-mirror/GeoLite2-City_20191029/GeoLite2-City.mmdb"
            target => "geoip"
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
        }

        mutate {
             convert => [ "[geoip][coordinates]", "float" ]
             convert => ["response_time","float"]
             convert => ["request_time","float"]
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
        json {
            source => "message"
            remove_field => "message"
            remove_field => "@timestamp"
        }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
        grok {
            match => { "request" => "%{WORD:method} (?<url>.* )" }
        }
        mutate {
            remove_field => ["host","event","input","request","offset","prospector","source","type","beat"]
            rename => {"http_user_agent" => "agent"}
           # rename => {"status" => "http_status"}
            rename => {"upstream_response_time" => "response_time"}
            rename => {"http_x_forwarded_for" => "x_forwarded_for"}
            split => {"x_forwarded_for" => ", "}
            split => {"response_time" => ", "}
        }
        geoip {
            source => "real_ip"
            database => "/opt/services/elk/logstash-prod/geolite2-city-mirror/GeoLite2-City_20191029/GeoLite2-City.mmdb"
            target => "geoip"
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
            #    add_field => ["[geoip][coordinates]" , "&{[geoip][latitude]}"]
             #   add_field => ["[geoip][coordinates]" , "&{[geoip][longitude]}"]
             #   fields => ["timezone","region_code","country_name" , "region_name" , "city_name" , "latitude" , "longitude"]
                #remove_field => {[geoip][latitude] , []}
        }

        mutate {
             convert => [ "[geoip][coordinates]", "float" ]
             convert => ["response_time","float"]
             convert => ["request_time","float"]
          }
    }

 if "Prod_Nginx_Waf_ACCESS" in [tags] {
        json {
            source => "message"
            remove_field => "message"
            remove_field => "@timestamp"
        }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
        grok {
            match => { "request" => "%{WORD:method} (?<url>.* )" }
        }
        mutate {
            remove_field => ["host","event","input","request","offset","prospector","source","type","beat"]
            rename => {"http_user_agent" => "agent"}
           # rename => {"status" => "http_status"}
            rename => {"upstream_response_time" => "response_time"}
            rename => {"http_x_forwarded_for" => "x_forwarded_for"}
            split => {"x_forwarded_for" => ", "}
            split => {"response_time" => ", "}
        }
        geoip {
            source => "real_ip"
            database => "/opt/services/elk/logstash-prod/geolite2-city-mirror/GeoLite2-City_20191029/GeoLite2-City.mmdb"
            target => "geoip"
            add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
            add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
            #    add_field => ["[geoip][coordinates]" , "&{[geoip][latitude]}"]
             #   add_field => ["[geoip][coordinates]" , "&{[geoip][longitude]}"]
             #   fields => ["timezone","region_code","country_name" , "region_name" , "city_name" , "latitude" , "longitude"]
                #remove_field => {[geoip][latitude] , []}
        }

        mutate {
             convert => [ "[geoip][coordinates]", "float" ]
             convert => ["response_time","float"]
             convert => ["request_time","float"]
          }
    }



    if "Prod_Nginx_ERROR" in [tags] {
#        mutate {
 #           remove_field => ["@timestamp"]
  #      }
        grok {
            match => {"message" => "(?<datetime>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}:%{GREEDYDATA:errormessage}(?:, client: (?<real_ip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:domain}?)(?:, request: %{QS:request})?(?:, upstream: (?<upstream>\"%{URI}\"|%{QS}))?(?:, host: %{QS:request_host})?(?:, referrer: \"%{URI:referrer}\")?"}
        }
   #     date {
    #        match => ["datetime", "yyyy/MM/dd HH:mm:ss"]
     #       target => "@timestamp"
      #  }
       # mutate {
        #    remove_field => ["message","request","http_referer","host","event","input","offset","prospector","source","type","beat"]
        #}
    }

     if "Prod_WAF_ACCESS" in [tags] {

	json {
                source => "message"
                remove_field => ["message"]
        }
        date {
                match => ["transaction.time_stamp", "ISO8601"]
                target => "@timestamp"
        }

        ruby {
          code => "
            event.set('client_ip', event.get('transaction')['client_ip'])
            event.set('message', event.get('transaction')['messages'][0]['message'])
            event.set('url', event.get('transaction')['request']['uri'])
            event.set('matched_rule', event.get('transaction')['messages'][0]['details']['match'])
            event.set('ruleID', event.get('transaction')['messages'][0]['details']['ruleId'])
            event.set('rule_file', event.get('transaction')['messages'][0]['details']['file'])
            event.set('data', event.get('transaction')['messages'][0]['details']['data'])
            event.set('agent', event.get('transaction')['request']['headers']['User-Agent'])
            event.set('method', event.get('transaction')['request']['method'])
            event.set('domain', event.get('transaction')['request']['headers']['Host'])
            event.set('http_status', event.get('transaction')['response']['http_code'])
          "
        }

        geoip {
            source => "client_ip"
            database => "/opt/services/elk/logstash-prod/geolite2-city-mirror/GeoLite2-City_20191029/GeoLite2-City.mmdb"
            target => "geoip"
        }

        mutate {
            remove_field => [ "transaction" ]
            remove_field => [ "client_ip" ]
            remove_field => [ "beat" ]
            remove_field => [ "[host][name]" ]
        }
    }

      if "prod_cleanstore_php_lp" in [tags] {
       mutate{
                add_field => { "@fields" => "%{fields}"}
        }
        json {
                source => "@fields"
                remove_field => [ "message","@fields", "fields"]
                }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
}
     
       if "prod_latamcleanstore_php_lp" in [tags] {
       mutate{
                add_field => { "@fields" => "%{data}"}
        }
        json {
                source => "@fields"
                remove_field => [ "message","@fields", "data","source","type"]
                }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
 }
    if "prod_amusement_php_lp" in [tags] {
       mutate{
                add_field => { "@fields" => "%{data}"}
        }
        json {
                source => "@fields"
                remove_field => [ "message","@fields", "data","source","type"]
                }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
 }

if "prod_integration_php_lp" in [tags] {
       mutate{
                add_field => { "@fields" => "%{data}"}
        }
        json {
                source => "@fields"
                remove_field => [ "message","@fields", "data","source","type"]
                }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
 }      
   if "prod_csc_retail_php_lp" in [tags] {
       mutate{
                add_field => { "@fields" => "%{fields}"}
        }
        json {
                source => "@fields"
                remove_field => [ "message","@fields", "fields"]
                }
        date {
            match => ["time_local", "ISO8601"]
            target => "@timestamp"
        }
}
if "system_messages" in [tags] {
	mutate{
		add_field => { "@fields" => "%{fields}"}
	}
}

if "system_audit_log" in [tags] {
	mutate{
		add_field => { "@fields" => "%{fields}"}
	}
}
	if "system_secure_log" in [tags] {
        mutate{
                add_field => { "@fields" => "%{fields}"}
        	}
	}
	if "system_cron_log" in [tags] {
        mutate{
                add_field => { "@fields" => "%{fields}"}
                }
        }

	if "cleanstore_system_log" in [tags] {
        mutate{
                add_field => { "@fields" => "%{fields}"}
                }
        }
	if "system_log" in [tags] {
        mutate{
                add_field => { "@fields" => "%{fields}"}
                }
        }

}

output {

if "system_log" in [tags] {
	
	 if [fields][market] == "csc" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_csccleanstore_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	
	 if [fields][market] == "csc-universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cscuniversal_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }

    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Amusement" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Integration" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "LatamCleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
        if [fields][market] == "Coffee" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_coffee_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_universal_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
		
         if [fields][market] == "Kpos" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kpos_system_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }

    }



if "system_cron_log" in [tags] {
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Amusement" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Integration" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "LatamCleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	if [fields][market] == "Coffee" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_coffee_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_universal_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
		
         if [fields][market] == "Kpos" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kpos_cron_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }

    }

if "system_secure_log" in [tags] {
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Amusement" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Integration" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "LatamCleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }

	    if [fields][market] == "Coffee" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_coffee_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_universal_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
		
		if [fields][market] == "Kpos" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kpos_secure_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }

    }
	
	
   if "system_messages" in [tags] {
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	 if [fields][market] == "Amusement" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	 if [fields][market] == "Integration" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	 if [fields][market] == "LatamCleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	    if [fields][market] == "Coffee" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_coffee_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_universal_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
		
		if [fields][market] == "Kpos" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kpos_message-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
    }
 if "system_audit_log" in [tags] {
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	if [fields][market] == "Amusement" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	if [fields][market] == "Integration" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	if [fields][market] == "LatamCleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
	    if [fields][market] == "Coffee" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_coffee_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
         if [fields][market] == "Universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_universal_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
		
		if [fields][market] == "Kpos" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kpos_audit_log-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
    }

   if "Prod_Nginx_ACCESS" in [tags] {
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
        }
    }

 if "Prod_Nginx_ACCESS" in [tags]{
        if [fields][market] == "csc-universal" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_cscuniversal_nginx_access-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }
   if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "csc-universal" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_cscuniversal_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }
      if "prod_csc_retail_php_lp" in [tags] {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_csccleanstore_php-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
    }

    if "prod_cleanstore_php_lp" in [tags] {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_php-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
    }

     if "prod_amusement_php_lp" in [tags] {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_php-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
    }    
    if "prod_integration_php_lp" in [tags] {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_php-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
    }

   if "prod_latamcleanstore_php_lp" in [tags] {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_php-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
    }

#    if "prod_latamcleanstore_php_vc" in [tags] {
#                elasticsearch {
#                    hosts => ["localhost"]
#                    ### the index name should start with logstash-*, then the map can works
#                    index => "logstash-prod_latamcleanstore_php-%{+YYYY.MM.dd}"
#                    user => "elastic"
#                    password => "b7mPQJu5mY14"
#                }
#    }

    if "prod_ims" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][server_name] == "IMS-Server" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_ims_apache_access-%{+YYYY.MM.dd}"
              user => "elastic"
              password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][customer_name] == "FMB" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_route_fmb_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][work_name] == "central" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_central_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][work_name] == "kps_backend" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kps_backend_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][work_name] == "website_kioplay" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_website_kioplay_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][work_name] == "website_kiosoft" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_website_kiosoft_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][customer_name] == "Coinamatic" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_route_coinamatic_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                   password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][customer_name] == "Hercules" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_route_hercules_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][customer_name] == "ALS" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_route_als_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "Amusement" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_amusement_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }


  if "Prod_Nginx_Waf_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][env]=="Waf"{
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_nginx_waf_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }
}

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "Cleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_cleanstore_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

   if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "LatamCleanstore" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_latamcleanstore_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "Integration" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_integration_nginx_access-%{+YYYY.MM.dd}"
                   user => "elastic"
                   password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "Universal" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_universal_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "Coffee" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_coffee_nginx_access-%{+YYYY.MM.dd}"
                    user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "csc" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_csccleanstore_nginx_access-%{+YYYY.MM.dd}"
                   user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }
	
	if "Prod_Nginx_ACCESS" in [tags] {
    if  "_grokparsefailure" not in [tags]{
    if [fields][market] == "Kpos" {
                elasticsearch {
                    hosts => ["localhost"]
                    ### the index name should start with logstash-*, then the map can works
                    index => "logstash-prod_kpos_nginx_access-%{+YYYY.MM.dd}"
                   user => "elastic"
                    password => "b7mPQJu5mY14"
                }
            }
        }
    }

    if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "csc" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_csccleanstore_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }

#    if "Prod_Nginx_ERROR" in [tags]{
#            elasticsearch {
#            hosts => ["localhost"]
#            ### the index name should start with logstash-*, then the map can works
#            index => "logstash-prod_nginx_error-%{+YYYY.MM.dd}"
#            user => "elastic"
#            password => "b7mPQJu5mY14"
#        }
#        }
    if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "Cleanstore" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_cleanstore_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }
     if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "Amusement" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_amusement_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }

   if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "Integration" {
            elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_integration_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }

    if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "LatamCleanstore" {
            elasticsearch { 
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_latamcleanstore_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }

    if "Prod_Nginx_ERROR" in [tags]{
        if [fields][market] == "Kpos" {
            elasticsearch { 
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_kpos_nginx_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
        }
    }

    if "Prod_WAF_ACCESS" in [tags]{
      if [message] {
        elasticsearch {
            hosts => ["localhost"]
            index => "logstash-prod_waf_access-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
      }
    }

 if "Prod_PHP_ERROR" in [tags] {
    elasticsearch {
            hosts => ["localhost"]
            ### the index name should start with logstash-*, then the map can works
            index => "logstash-prod_php_error-%{+YYYY.MM.dd}"
            user => "elastic"
            password => "b7mPQJu5mY14"
        }
     }

}
